"""
Django settings for blog project.

Generated by 'django-admin startproject' using Django 1.10.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import sys
import pymysql

# 链接数据库做配置
pymysql.install_as_MySQLdb()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# 设置 apps, extra_apps 目录
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))
sys.path.insert(0, os.path.join(BASE_DIR, 'extra_apps'))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'lli(!7)av9-@oe#(7u&jm41e!$2hbrb#-=@+-ker0qh%r7^yt#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'home',
    'article',
    # 添加xadmin配置
    'xadmin',
    'crispy_forms',
    # 添加富文本编辑器配置
    # 'ckeditor',
    # 'ckeditor_uploader',

    # 配置另一个富文本
    'DjangoUeditor',
    # 添加django_rest_framework
    'rest_framework',
    'django_filters',
]

# UserInfo 覆盖了 django 内置的 user 表
AUTH_USER_MODEL = 'home.UserInfo'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 增加配置media文件访问
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'blog.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases
# 链接数据库
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'rest_blog',
        'HOST': 'localhost',
        'PORT': '3306',
        'USER': 'root',
        'PASSWORD': 'mysql',
        # 'PASSWORD': 'wg709803..',
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False  # 获取数据库本地时间

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

# STATIC_ROOT = '/home/ubuntu/django/webstatic/'
STATIC_URL = '/static/'

MEDIA_URL = '/media/'
# MEDIA_URL = "/home/ubuntu/django/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# 当运行 python manage.py collectstatic 的时候
# STATIC_ROOT 文件夹 是用来将所有 STATICFILES_DIRS 中所有文件夹中的文件，以及各 app 中 static 中的文件都复制过来
# 把这些文件放到一起是为了用 apache/nginx 等部署的时候更方便
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

UEDITOR_SETTINGS = {
    "toolbars": {  # 定义多个工具栏显示的按钮，允行定义多个
        "name1": [['source', '|', 'bold', 'italic', 'underline']],
    },
    "images_upload": {
        "allow_type": "jpg,png",  # 定义允许的上传的图片类型
        "max_size": "2222kb"  # 定义允许上传的图片大小，0代表不限制
    },
    "files_upload": {
        "allow_type": "zip,rar",  # 定义允许的上传的文件类型
        "max_size": "2222kb"  # 定义允许上传的文件大小，0代表不限制
    },
    "image_manager": {
        "location": "img/"  # 图片管理器的位置,如果没有指定，默认跟图片路径上传一样
    },
}

# CKEDITOR_CONFIGS = {
#     'default': {
#         'toolbar': 'full',
#         # 添加按钮在这里
#         'toolbar_Custom': [
#             ['Blockquote', 'CodeSnippet'],
#
#         ],
#     },
# }
# CKEDITOR_UPLOAD_PATH = "/uploads/"
# CKEDITOR_JQUERY_URL = 'https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js'


# REST 添加分页
# REST_FRAMEWORK = {
# 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
# 'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',)   # 过滤器
# 'PAGE_SIZE': 5,
# }
